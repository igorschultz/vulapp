name: Container Build
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'    

permissions: write-all

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest

    env:
      GITHUB_SHA: ${{ github.sha }}


    steps:
      - name: Checkout project
        uses: actions/checkout@v4.1.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
    
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
          
      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install kubectl
    
      - name: Check gke-gcloud-auth-plugin
        run: kubectl version --client
          
      - name: Use gcloud CLI
        run: gcloud info
    
      - name: Docker auth
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Docker build & tag image
        run: |
          docker build --platform=linux/amd64 -t ${{ secrets.CONTAINER_REPO }}:latest -t ${{ secrets.CONTAINER_REPO }}:latest .

      - name: Checkout project
        uses: actions/checkout@v4.1.1
          
      - name: Scan Container Image with CrowdStrike
        uses: CrowdStrike/container-image-scan-action@main
        with:
          container_repository: ${{ secrets.CONTAINER_REPO }}
          container_tag: latest
          crowdstrike_region: us-1
          crowdstrike_score: 20000
          retry_count: 30
        env:
          FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
          FALCON_CLIENT_ID: ${{ secrets.FALCON_CLIENT_ID }}
          JSON_REPORT: /tmp/report.json        

      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: image_scan_output
          path: /tmp/output.json        

      - name: Patch Container Image with Falcon Sensor
        uses: crowdstrike/falconutil-action@v1.0.0
        with:
          falcon_client_id: ${{ secrets.FALCON_CLIENT_ID }}
          falcon_region: 'us-1'
          source_image_uri: '${{ secrets.CONTAINER_REPO }}:latest'
          target_image_uri: '${{ secrets.CONTAINER_REPO }}:patched'
          cid: '${{ secrets.FALCON_CID }}'
          falconctl_opts: '--tags=fargate'
          cloud_service: CLOUDRUN
          image_pull_policy: IfNotPresent
        env:
          FALCON_CLIENT_SECRET: '${{ secrets.FALCON_CLIENT_SECRET }}'
            
      - name: Tag & Push docker image
        run: |
          docker push ${{ secrets.CONTAINER_REPO }}:patched